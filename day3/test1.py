
#자료형- 확인하는 함수 -꼭 print로 감싸야함  
a = 10
print(type(a))
b = 10.5
print(type(b))
A = 1 
print(A, a)
#대문자와 소문자 구분함.




#10진법 

print(bin(10), oct(10), hex(10)) #ob1010 10진수 #10의 2진수 값 # 8진수 0o #16진수 hex===0xa 
print(10, 0o12, 0xa, 0b1010) #해도 같은 값  #정수가 됨   #8진수 1-7abcdef, 12345 16진수 

print(7+2j, type(7+2j)) #원래 i이지만 파이썬 j 씀 # 복소수

#연산자 
v1 =3  #---> 대입 연산자 
v1= v2 =v3 = 5 # 5를 v3에 대입 그리고 그 값 v2에 대입, 그 다음 v1에 대입 
#v1 = 5; v2 = 5; v3=5 를 위에 처럼 씀 
a = 10
b =20 
print("a :", a, "b :" , b)
#자리바꿈 
a , b = b, a 
print("a :", a, "b :" ,b )
#a, b = 1  # 에러 
print("------------------------------------")
#a, b = 1, 2, 3, 4, 5  #unpack 너무 값 많아 
a, *b = 1,2, 3, 4, 5 # 참조형 가능  # 1번은 a에 담고 나머지 b에 담아 
*a, b, c = 10, 20, 30, 40,50     # 10은 a*는 10, 20, 30(나머지값 넣어줌)  b는 40, c는 50 값 먼저 하나씩 넣어줌 
print("a : ", a, "b : ", b, "c :", c)
#출력 
print(format(1.2345, '10.2f')) #c  정수 2자리 -- 10. , 2f 소수점은 두자리만 표시해줘.
print("나는 나이가 20살입니다")
age = 20
print("나는 나이가" + str(age) + "살입니다.") # - 숫자 와 문자열 같이 못해 str로 묶어줌 

#임시 %d 이 값에 여기만 바뀌어 들어가게 할 거예요. 임시로 출력용으로   %21
print("나는 나이가 %d 살입니다"%21)
print("나는 나이가 %s 살입니다"%'스무')   #문자라면 %s 들어감  숫자라면 %d 들어감

print("오늘은 %d 월 %d일 이고, %s 입니다."%(7, 17, '제헌절')) #옆에 변수로 쓸 수도 있음. 
print("이름은 %s이고 키가 %f입니다" %('뽀로로',80.2)) #float ---f는 , 키는 .**도 중요함.  
#* asterisk abc 

print ("---------------------------------------------------------------------------")
print("이름은 {0}, 나이는 {1}".format('뽀로로',13))   #{} 앞의 것의 0번  앞의 것의 1번 
print("이름은 {1}, 나이는 {0}".format('뽀로로', 13))   #format 형태가 어떻게 생겼다 알려주는 것 
print("이름은 {}, 나이는 {}".format('뽀로로', 13))
#연산자
print(5+3, 5-3, 5*3, 5/2, 5//3, 5%3, divmod(5,3))  #리스트 [] 튜플 ()  #몫과 나머지를 튜플로 넘겨주는 함수 divmod 
print(5**3) # 지수승 5의 3승 
print(5 >3, 5==3, 5 <= 3)
print(5 < 3 and 4<3, 5>3 or 4<3, not(5>3)) #not 아니다. 여기서는 5가 3보다 커 true가 맞는데 그것을 부정함. 

print("대" + "한" + "민국" + "만세")
print("나이 :" +str(5000) , str(5) + '3' ) #숫자는 문자로 바꿔야 연산할 수 있었어요. 

print("만세" *10)

#aaabbbccccddddd
#a3b3c5d5 압축 이렇게 쓰는 알고리즘도 있음, 압축프로그램이 이걸보고 길게 푸는 것 

print("================================================================")
a = 5
a = a +1
print(a)
a += 1 # a++, ++a, XXXXX 다른 언어에서 이런 거 쓰는 데 파이썬은 안 됨. 

print(a)

# 부호 변경  
print("부호 변경", a, -a, a*-1, -a)

print('boolean : ', bool(0), bool(1))  #함수 (true, false확인해주는 것)블리언타입으로 형 변화해 10진수의 0은 f 1은 t, 
print( bool(-2), bool(None), bool(''), bool (True), bool(False))

#print('c:\name\python\table') #\n enter \t는 텝  제어문자 # 리눅스 유닉스 /app/data/type1.aaa 유닉스가 더 먼저 생김 
#'c:/name/python/table'의 /해도 window는 됨  
#이건 기호야 ---- 역슬래쉬 두 개 넣으면 1개로 인식함, 그 기능을 없애줘 의미로 두개를 쓰면 한 개로 인식
print('c:\\name\\python\\table')
print(r'c:\\name\\python\\table') #raw data야 라는 의미로 r써줌 원래 순수한 데이터야  

