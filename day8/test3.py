
#함수를 호출할 때 다시 꺼내서 사용하는 함수 : 클로저(Closure)
#클로저 만들어보려고 해요. 
def plus_ten():
    a = 10       #지역변수 
    def add(b):  #중첩함수 
        return a+b #매게변수 가질 수 있음 안의 있는 함수는 밖의 함수 접근 가능 
    return add #이걸 실행하면 add라는 함수 린턴... 매개변수, 함수담는 것 다 가능



cal = plus_ten()  #plus함수 실행 #실행하면 add함수 리턴 전달되서  #add쓰던 dl이거 쓰던같은 

print(cal(1)) #1을 

#함수안에 있는 함수 불러서 a =10이라는 게 남아있음. 

#---------------------------------------------
#일회성으로 줄 수 없어요? 그래서 람다로 

def plus_ten2():
    a = 10 
    return lambda b : a+b #매게변수 b, a+b리턴해, 익명이니까 lambda로 쓰면 됨.  

cal2 = plus_ten2()

print(cal2(100), cal2(200)) #a라는 값 노출되지 않게 하고 싶어요.-->코드에 숨겨놓고 사용하되 호출할 때마다 가져오는 것 해줄 수 있음 

#이런 애를 클로져 