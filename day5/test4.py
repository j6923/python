'''
   dict  : 키 : 값 의 쌍으로 이루어짐, 순서 없음 ,,, 순서 없는 것 set === 중복 변형하고 싶으면 set으로 변형하면 됐음. 
   키 와 값으로 매핑되어 있는 순서가 없는 집합 

   다른 언어에서도 많이 쓰는 타입 --- JSON, 자바 스크립트에서 객체를 표기하는 표기법이라는 뜻, 데이터 가장 간단하게 풀어쓸 수 있음. 
   json.org JSON이 확장되면서 sql에서는 nosql언어에서는 json으로 막 집어넣고 막 꺼내기도 함. 파이쎤에서는 모두 딕셔너리가 됨. 원래 자바 표기법으로 썼으나
   서로 다른 데이터 주고 받을 때 json으로 받는 이런 형식으로 업계 맣이 쓰는 데이터 교환방식 됨.몽고디비, 카샨드라 json에 최적화되도록 만들어짐. 
   키 밸류형식으로 되어 있음 
   언어 : JSON 

'''

mydic = dict(k1=1, k2='abc', k3 = 3.4)  #앞 키 뒤 값(value) , =은 '매칭되는 애들의 의미', 숫자는 정수, 실수 상관없이 사용가능 
print(mydic)

dic = {'파이썬' : '뱀', '자바': '커피', '오라클':'예언자'} #신 이름으로 지은것 오라클은,, 쌍 이루는 걸로 이룸 #이렇게 딕션어리 만들 수 있음. 
#탐색하고 찾음
print(dic, len(dic)) #dic가 있고 길이 구함. 묶어놓은 것이 한 개임. 
print(dic['자바']) #키로 밸류값 찾을 수 있음 , 키로 벨류값을 꺼내줌. 
dic['스미스'] = "백그라운드프로세스" #없는 요소에 추가 할당하면 추가 됨 
print(dic) #새로운 애들도 더 추가가능. 
dic['neo'] = "주인공"
dic['스미스'] = "bg" #같은 이름  t값에 할당값을 하면 써짐, 있는 값 할당 하면 덮어써버림
#중복된 값 안 됨, 중복된 값 주면 덮어써버림. 
print(dic)
#print(dic[0]) #인덱싱해서 찾을 수 없음
dic.clear() #사라지는 것을 볼 수 있음
print(dic)


#1부터 100 사이의 정수를 램덤하게 생성 
# import random
# li= range(1,101)
# idx = random.randint(1,101) 
# print(idx, li[idx])
# #사용자로부터 숫자 한 개를 입력
# int(input("숫자를 입력하세요.: "))

# #두 수가 일치하면 일치합니다. 메세지 출력 
# if idx in li:
#     print(input("일치합니다"))
# else:
#     print(input("일치하지 않습니다.")) 
# #일치하지 않으면 사용자가 입력한 수보다 큰값인지 작은값인지 출력 
# #일치하지 않으면 일치하지 않습니다. 메세지 출력 


import random 
#수업
num = random.randint(1,100) 
while True: #맞으면 무한번 반복해  #while문 안으로 tab키로 들여놔야 함. 
    #2. 
    guess = int(input("1부터 100사이의 정수를 입력하세요: "))
    print(num, guess)
    #3. 
    if num == guess :
        print("성공 짝짝짝 축하합니다.. ")
        break#맞췄으면 그만 나와. break 
    else:
        if num >= guess:
            print("더 큰 수를 입력해봐~~")
        else:
            print("그거 보다 작을 걸~~~~")
        
        #일치한다면 
print("-------------------------------------------------------------------------------------------------------")



        
        #안에 하나씩 꺼내고 싶어요. 
    for key in dic:
            print(key, dic[key])

    #처음부터 값(value)들만 출력

    for val in dic.values():
        print(val)
